{"version":3,"file":"static/js/595.289fad04.chunk.js","mappings":"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","sources":["webpack://myapp/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","Components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.js","webpack://myapp/./src/Components/Profile/MyPost/MyPost.module.css?9e2c","webpack://myapp/./src/Components/Profile/MyPost/Post/Post.module.css?ba55","Components/Profile/MyPost/Post/Post.js","Components/Profile/MyPost/PostForm/PostForm.jsx","Components/Profile/MyPost/MyPost.js","Components/Profile/MyPost/MyPostContainer.js","webpack://myapp/./src/Components/Profile/Profile.module.css?f51d","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_body\":\"ProfileInfo_profile_body__jtYAV\",\"profile_body_children\":\"ProfileInfo_profile_body_children__ze+81\",\"profile_center\":\"ProfileInfo_profile_center__7Cx5P\",\"editPanel\":\"ProfileInfo_editPanel__wbUvs\",\"profile_left\":\"ProfileInfo_profile_left__uA-pG\",\"description\":\"ProfileInfo_description__fA7f-\",\"profile_right\":\"ProfileInfo_profile_right__cmR8v\",\"formSummaryError\":\"ProfileInfo_formSummaryError__aLh-o\",\"input_file_button\":\"ProfileInfo_input_file_button__LofKf\",\"titleOfEditPanel\":\"ProfileInfo_titleOfEditPanel__xiK2G\",\"separateLine\":\"ProfileInfo_separateLine__zfYp9\",\"inputWrapper\":\"ProfileInfo_inputWrapper__RGxms\",\"inputFile\":\"ProfileInfo_inputFile__Y6KEk\"};","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode,setEditMode] = useState(false);\n    let [status,setStatus] = useState(props.status);\n\n    useEffect( () => {\n            setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const diactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>\n                        <span className={'allocator'}>Status:</span> {props.status || \"undefined :/ \"}\n                    </span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={diactivateEditMode}/>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default ProfileStatusWithHooks;\n","import classes from \"../ProfileInfo.module.css\";\r\nimport {CreateField, Element} from \"../../../Common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst Input = Element(\"input\");\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <div className={classes.profile_center}>\r\n            <div className={classes.description}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <h2 className={classes.titleOfEditPanel}>Basic information:</h2>\r\n                    <div className={classes.editPanel}>\r\n                        <li>Full name: {CreateField(\"Full name\",\"fullName\",[],Input)}</li>\r\n                        <li>Looking for a job: {CreateField(\"\",\"lookingForAJob\",[],Input, {type:\"checkbox\"})}</li>\r\n                        <li className={classes.separateLine}>My skills: {CreateField(\"\",\"lookingForAJobDescription\",[],Element(\"textarea\") )}</li>\r\n                        <li>About me: {CreateField(\"About me\",\"aboutMe\",[],Element(\"textarea\") )}</li>\r\n                        <div>\r\n                            <h2>Contacts:</h2>\r\n                            <li className={classes.editPanel}>{Object.keys(profile.contacts).map(key => {\r\n                                return <li>{key}:{CreateField(key,\"contacts.\" + key,[],Element(\"input\") )}</li>\r\n                            })}</li>\r\n                        </div>\r\n                    </div>\r\n                    <button className={'buttonStyle'}>Save</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileDataForm;","import classes from './ProfileInfo.module.css';\nimport ava from './../../../Resource/Images/ava_girl.jpg'\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\nimport {useState} from \"react\";\nimport ProfileDataForm from \"./ProfileDataForm/ProfileDataForm\";\nimport {reduxForm} from \"redux-form\";\n\nconst ProfileDataReduxForm = reduxForm({form: 'profileData'})(ProfileDataForm)\n\nconst ProfileInfo = ({profile, savePhoto, saveProfile, ...props}) => {\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(() => {\n            setEditMode(false);\n        })\n    }\n\n    return (\n        <div className={classes.profile_body}>\n            <div className={classes.profile_body_children}>\n                <div className={classes.profile_left}>\n                    <img src={profile.photos.large ? profile.photos.large : ava}/>\n                    {props.isOwner && <div className={classes.editPanel}>\n                        <button className={'buttonStyle'} onClick={() => {setEditMode(true)}}>Edit</button>\n                        {editMode && <button className={'buttonStyle'} onClick={() => {setEditMode(false)}}>Back</button> }\n                    </div>}\n                </div>\n                {editMode\n                    ? <ProfileDataReduxForm onSubmit={onSubmit} initialValues={profile} profile={profile}/>\n                    : <ProfileData profile={profile} props={props}/>}\n            </div>\n            <div className={classes.profile_right}>\n                {props.isOwner &&\n                    <div className={classes.inputWrapper}>\n                        <input type=\"file\" name=\"file\" id=\"inputFile\" className={classes.inputFile} onChange={onMainPhotoSelected}></input>\n                        <label className={classes.input_file_button} htmlFor=\"inputFile\">Change ava</label>\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nconst ProfileData = ({profile, props}) => {\n    return (\n        <div className={classes.profile_center}>\n            <div className={classes.description}>\n                <h3>{profile.fullName}</h3>\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n                <li><span className={'allocator'}>Looking for a job:</span> {profile.lookingForAJob ? \"yes\" : \"no\"}</li>\n                <li><span className={'allocator'}>My skills:</span> {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : \"nothing\"}</li>\n                <li><span className={'allocator'}>About me:</span> {profile.aboutMe ? profile.aboutMe : \"nothing\"}</li>\n                <li><span className={'allocator'}>Contacts:</span> </li>\n                <li>{Object.keys(profile.contacts).map(key => {\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n                })}</li>\n            </div>\n        </div>\n    );\n}\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return (\n        contactValue ? <div className={classes.contacts}><span className={'allocator'}>{contactTitle}:</span> {contactValue}</div> : null\n    );\n}\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"MyPost_post__pz8ak\",\"post_image\":\"MyPost_post_image__iB-bw\",\"profile_post\":\"MyPost_profile_post__gk5i7\",\"all_posts\":\"MyPost_all_posts__W3ivf\",\"content_input\":\"MyPost_content_input__eJHkS\",\"post_text\":\"MyPost_post_text__PUVDY\",\"myPosts\":\"MyPost_myPosts__rhG60\",\"message_answer\":\"MyPost_message_answer__OHt0U\",\"input\":\"MyPost_input__Y+V-S\",\"submit\":\"MyPost_submit__vYkv7\",\"file_input\":\"MyPost_file_input__T+jvG\",\"input__wrapper\":\"MyPost_input__wrapper__L+8k4\",\"input__file\":\"MyPost_input__file__+IpDB\",\"input__file_button\":\"MyPost_input__file_button__sNOLT\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__zObHh\",\"post_text\":\"Post_post_text__amRvV\",\"post_image\":\"Post_post_image__UyEav\",\"profile_post\":\"Post_profile_post__Iiqq8\"};","import classes from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className={classes.post}>\n            <div>\n                <div className={classes.post_image}>\n                    <img src={props.imageOfPost}/>\n                </div>\n                <div>\n                    <div className={classes.profile_post}>\n                        <a><img src={props.imagePath}/></a>\n                        <a><h5>{props.nameOfUser ? props.nameOfUser : \"no name user\"}</h5></a>\n                        <button>{props.countLikes} likes</button>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.post_text}>\n                <p>{props.message}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;\n","import classes from \"../MyPost.module.css\";\r\nimport React from \"react\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst PostForm = (props) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        const target = e.target;\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(target.files[0]);\r\n        fileReader.onload = () => {\r\n            props.checkPostPhoto(target,fileReader.result);\r\n        }\r\n\r\n        if (!target.files.length) {\r\n            alert('Ничего не загружено');\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={classes.message_answer} onSubmit={props.handleSubmit}>\r\n            <div className={classes.content_input}>\r\n                <Field name={\"newPostText\"}\r\n                       component={\"input\"}\r\n                       placeholder={\"Enter your text for the post\"}\r\n                       className={classes.input}\r\n                />\r\n                <div className={classes.input__wrapper}>\r\n                    <input type=\"file\" name=\"file\" id=\"input__file\" className={classes.input__file}\r\n                           onChange={onMainPhotoSelected}></input>\r\n                    <label className={classes.input__file_button} htmlFor=\"input__file\">Select an image</label>\r\n                </div>\r\n            </div>\r\n            {props.imagePostChooseMode ? <button type={\"submit\"} className={'buttonStyle'}>Submit</button> : <h1>Picture not selected</h1>}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PostForm;","import classes from './MyPost.module.css';\nimport Post from \"./Post/Post\";\nimport React from \"react\";\nimport PostForm from \"./PostForm/PostForm\";\nimport {reduxForm, reset} from \"redux-form\";\n\nconst afterSubmit = (result, dispatch) => dispatch(reset('post'));\nconst PostReduxForm = reduxForm({form: 'post', onSubmitSuccess: afterSubmit})(PostForm)\n\nfunction MyPost(props) {\n    let onSubmit = (formData) => {\n        props.addPostAC(formData.newPostText);\n    }\n\n    let MyPostsElement = props.profileData.map(posts =>\n        <Post key={posts.id} message={posts.message} ountLikes={posts.countLikes} imagePath={posts.imagePath}\n              imageOfPost={posts.imageOfPost} nameOfUser={posts.nameOfUser}/>\n    )\n\n    return (\n        <div>\n            <h1>All posts</h1>\n            {props.isOwner && <PostReduxForm pathToTheImagePost={props.pathToTheImagePost} onSubmit={onSubmit}\n                                             checkPostPhoto={props.checkPostPhoto} imagePostChooseMode={props.imagePostChooseMode}/>}\n            <div className={classes.all_posts}>\n                {MyPostsElement}\n            </div>\n        </div>\n    );\n}\n\nexport default MyPost;\n","import {connect} from \"react-redux\";\nimport MyPost from \"./MyPost\";\nimport {addPostAC, checkPostPhoto} from \"../../../Redux/ProfileReducer\";\n\nlet mapStateToProps = (state,props) => {\n    return {\n        profileData: state.profileData.MyPostsData,\n        imagePostChooseMode: state.profileData.imagePostChooseMode,\n        pathToTheImagePost: state.profileData.pathToTheImagePost,\n        isOwner: props.isOwner\n    }\n}\n\nconst MyPostContainer = connect(mapStateToProps, {addPostAC,checkPostPhoto})(MyPost)\n\nexport default MyPostContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__1m23r\",\"wrapper\":\"Profile_wrapper__laFLh\"};","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\nimport classes from \"./Profile.module.css\"\nimport React from \"react\";\n\nconst Profile = (props) => {\n    return (\n        <div className={classes.wrapper}>\n            <ProfileInfo\n                isOwner={props.isOwner}\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n                saveProfile={props.saveProfile}\n                savePhoto={props.savePhoto}\n            />\n            <MyPostContainer isOwner={props.isOwner}/>\n        </div>\n    )\n}\n\nexport default  Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    getProfile,\n    getStatus,\n    savePhoto,\n    saveProfile,\n    setUserProfileAC,\n    updateStatus\n} from \"../../Redux/ProfileReducer\";\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\nimport {WithAuthRedirect} from \"../Hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{location, navigate, params}}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.router.params.userId;\n\n        if (!userId) {\n            userId = this.props.userID;\n        }\n\n        this.props.getProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} isOwner={!this.props.router.params.userId} savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profileData.ProfileInfoData,\n    status: state.profileData.Status,\n    userID: state.Auth.id,\n    userIsAuth: state.Auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {setUserProfileAC, getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter,\n    WithAuthRedirect\n)(ProfileContainer);\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","Input","Element","handleSubmit","profile","error","classes","onSubmit","CreateField","type","Object","keys","contacts","map","key","ProfileDataReduxForm","reduxForm","form","ProfileDataForm","ProfileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","ava","isOwner","onClick","formData","then","initialValues","name","id","target","files","length","htmlFor","imageOfPost","imagePath","nameOfUser","countLikes","message","Field","component","placeholder","fileReader","FileReader","readAsDataURL","onload","checkPostPhoto","result","alert","imagePostChooseMode","PostReduxForm","onSubmitSuccess","dispatch","reset","PostForm","MyPostsElement","profileData","posts","ountLikes","pathToTheImagePost","addPostAC","newPostText","connect","state","MyPostsData","MyPost","ProfileContainer","userId","this","router","params","userID","getProfile","getStatus","prevProps","prevState","snapshot","refreshProfile","React","compose","ProfileInfoData","Status","Auth","userIsAuth","isAuth","setUserProfileAC","Component","location","useLocation","navigate","useNavigate","useParams","WithAuthRedirect"],"sourceRoot":""}